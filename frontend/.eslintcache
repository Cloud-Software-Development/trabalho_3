[{"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/index.tsx":"1","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/App.tsx":"2","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/router.tsx":"3","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/patterns/NavBar/NavBar.tsx":"4","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/infra/MyHeader/MyHeader.tsx":"5","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/store/index.js":"6","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/utils/auth.tsx":"7","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/patterns/Toast/index.tsx":"8","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/foudation/Colors/index.ts":"9","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/foudation/Shadows/index.ts":"10","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/foudation/Spaces/index.ts":"11","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/pages/Login/index.tsx":"12","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/pages/Register/index.tsx":"13","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/pages/PublicHome/index.tsx":"14","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/pages/AdmHome/index.tsx":"15","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/pages/SuperUser/index.tsx":"16","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/foudation/Typography/index.tsx":"17","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/utils/api.tsx":"18","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/patterns/BoxContainer/BoxContainer.tsx":"19","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/patterns/Modal/Modal.tsx":"20","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/primitives/MyInput/index.tsx":"21","/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/primitives/Button/index.tsx":"22","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/index.tsx":"23","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/App.tsx":"24","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/router.tsx":"25","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/infra/MyHeader/MyHeader.tsx":"26","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/patterns/NavBar/NavBar.tsx":"27","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/store/index.js":"28","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/utils/auth.tsx":"29","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/patterns/Toast/index.tsx":"30","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/pages/Login/index.tsx":"31","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/pages/SuperUser/index.tsx":"32","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/pages/PublicHome/index.tsx":"33","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/pages/Register/index.tsx":"34","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/pages/AdmHome/index.tsx":"35","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/foudation/Colors/index.ts":"36","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/utils/api.tsx":"37","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/foudation/Spaces/index.ts":"38","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/foudation/Shadows/index.ts":"39","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/foudation/Typography/index.tsx":"40","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/patterns/BoxContainer/BoxContainer.tsx":"41","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/patterns/Modal/Modal.tsx":"42","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/primitives/MyInput/index.tsx":"43","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/primitives/Button/index.tsx":"44"},{"size":196,"mtime":1614107322071,"results":"45","hashOfConfig":"46"},{"size":693,"mtime":1614107322071,"results":"47","hashOfConfig":"46"},{"size":2621,"mtime":1614107322075,"results":"48","hashOfConfig":"46"},{"size":6878,"mtime":1614107322071,"results":"49","hashOfConfig":"46"},{"size":1333,"mtime":1614107322071,"results":"50","hashOfConfig":"46"},{"size":433,"mtime":1614107322075,"results":"51","hashOfConfig":"46"},{"size":3275,"mtime":1614107322075,"results":"52","hashOfConfig":"46"},{"size":480,"mtime":1614107322071,"results":"53","hashOfConfig":"46"},{"size":486,"mtime":1614107322071,"results":"54","hashOfConfig":"46"},{"size":239,"mtime":1614107322071,"results":"55","hashOfConfig":"46"},{"size":125,"mtime":1614107322071,"results":"56","hashOfConfig":"46"},{"size":4898,"mtime":1614107322075,"results":"57","hashOfConfig":"46"},{"size":7143,"mtime":1614107322075,"results":"58","hashOfConfig":"46"},{"size":11796,"mtime":1614107322075,"results":"59","hashOfConfig":"46"},{"size":27453,"mtime":1614107322075,"results":"60","hashOfConfig":"46"},{"size":5025,"mtime":1614107322075,"results":"61","hashOfConfig":"46"},{"size":1455,"mtime":1614107322071,"results":"62","hashOfConfig":"46"},{"size":136,"mtime":1614107322075,"results":"63","hashOfConfig":"46"},{"size":434,"mtime":1614107322071,"results":"64","hashOfConfig":"46"},{"size":4019,"mtime":1614107322071,"results":"65","hashOfConfig":"46"},{"size":594,"mtime":1614107322071,"results":"66","hashOfConfig":"46"},{"size":3334,"mtime":1614107322071,"results":"67","hashOfConfig":"46"},{"size":196,"mtime":1614373959253,"results":"68","hashOfConfig":"69"},{"size":693,"mtime":1614108983849,"results":"70","hashOfConfig":"69"},{"size":2621,"mtime":1614108983849,"results":"71","hashOfConfig":"69"},{"size":1333,"mtime":1614108983849,"results":"72","hashOfConfig":"69"},{"size":6878,"mtime":1614108983849,"results":"73","hashOfConfig":"69"},{"size":433,"mtime":1614108983849,"results":"74","hashOfConfig":"69"},{"size":3275,"mtime":1614375336029,"results":"75","hashOfConfig":"69"},{"size":480,"mtime":1614108983849,"results":"76","hashOfConfig":"69"},{"size":4898,"mtime":1614108983849,"results":"77","hashOfConfig":"69"},{"size":5025,"mtime":1614108983849,"results":"78","hashOfConfig":"69"},{"size":11796,"mtime":1614108983849,"results":"79","hashOfConfig":"69"},{"size":7143,"mtime":1614108983849,"results":"80","hashOfConfig":"69"},{"size":27453,"mtime":1614375336029,"results":"81","hashOfConfig":"69"},{"size":486,"mtime":1614108983849,"results":"82","hashOfConfig":"69"},{"size":108,"mtime":1614375340409,"results":"83","hashOfConfig":"69"},{"size":125,"mtime":1614108983849,"results":"84","hashOfConfig":"69"},{"size":239,"mtime":1614108983849,"results":"85","hashOfConfig":"69"},{"size":1455,"mtime":1614108983849,"results":"86","hashOfConfig":"69"},{"size":434,"mtime":1614108983849,"results":"87","hashOfConfig":"69"},{"size":4019,"mtime":1614108983849,"results":"88","hashOfConfig":"69"},{"size":594,"mtime":1614108983849,"results":"89","hashOfConfig":"69"},{"size":3334,"mtime":1614108983849,"results":"90","hashOfConfig":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bz6c1k",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},"1evhdgv",{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"137"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"137"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"137"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"137"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"137"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"137"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"137"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"137"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"137"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"137"},"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/index.tsx",[],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/App.tsx",[],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/router.tsx",["191","192","193"],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/patterns/NavBar/NavBar.tsx",["194","195","196","197","198","199"],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/infra/MyHeader/MyHeader.tsx",[],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/store/index.js",[],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/utils/auth.tsx",["200","201","202","203","204"],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/patterns/Toast/index.tsx",[],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/foudation/Colors/index.ts",[],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/foudation/Shadows/index.ts",[],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/foudation/Spaces/index.ts",[],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/pages/Login/index.tsx",["205","206","207"],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/pages/Register/index.tsx",["208","209","210","211","212"],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/pages/PublicHome/index.tsx",["213","214","215","216","217","218","219","220","221","222","223"],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/pages/AdmHome/index.tsx",["224","225","226","227","228","229","230","231","232","233","234","235","236"],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/pages/SuperUser/index.tsx",["237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254"],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/foudation/Typography/index.tsx",[],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/utils/api.tsx",[],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/patterns/BoxContainer/BoxContainer.tsx",[],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/patterns/Modal/Modal.tsx",["255","256","257","258","259","260","261","262"],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/primitives/MyInput/index.tsx",["263"],"/home/gabriel/Projects/University/Nuvem/frontend_trabalho2/src/components/primitives/Button/index.tsx",["264","265","266","267","268","269","270","271"],"/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/index.tsx",[],["272","273"],"/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/App.tsx",[],"/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/router.tsx",["274","275","276"],"import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport {Route, Switch, BrowserRouter, useParams, Redirect, Router} from 'react-router-dom'\nimport Toast from './components/patterns/Toast'\n\n// Rotas\nimport AdmHome from './pages/AdmHome'\nimport Login from './pages/Login'\nimport PublicHome from './pages/PublicHome'\nimport Register from './pages/Register'\nimport SuperUser from './pages/SuperUser'\n\n// Utils\nimport { GetUser, GetUserRole } from './utils/auth'\n\nexport default function Routes() {\n  \n  const dispatch = useDispatch()\n  dispatch({type: 'CHANGE_VIEW_USER', value: false})\n\n  const userRole = GetUserRole()\n\n  GetUserRole()\n  return (\n    <Switch>\n      {/* Public Router */}\n      <Route path={'/'} exact component={PublicHome} />\n      <Route path={'/login'} exact component={Login} />\n      <Route path={'/register'} exact component={Register} />\n\n      {/* User Router */}\n      <PrivateRouteAdmin path={'/home'} exact component={AdmHome}  />\n      \n      {/* AdminRouter */}\n      <PrivateRouteSuperUser path={'/superuser'} exact component={SuperUser} />\n      {\n        userRole === 2 ? (\n          <Route path={'/home/:id'} children={<Child />}  />\n        ) : (\n          null\n        )\n      }\n    </Switch>\n  )\n}\n\nfunction Child(){\n  const id  = useParams()\n  return(\n    AdmHome({ userIdAdm: id })\n  )\n}\n\n// Rotas de administradores\nconst PrivateRouteAdmin = ({ component: Component, ...rest }) => {\n  const toast = Toast()\n \n  const userRole = GetUserRole()\n\n  if(userRole === 0){\n    toast.addNewToast({mensage: 'Realize login como usário!', myType: 'warning'})\n  }\n\n  return (\n    <Route \n      {...rest}\n      render={props =>\n        userRole !== 0 ? (                                                                   \n          <Component {...props} />                                                    \n        ) : (\n          <Redirect to={{pathname:\"/login\", state: {from: props.location }}} />    \n        )\n      }\n    />\n  )\n}\n\n// Rotas de Superuser\nconst PrivateRouteSuperUser = ({ component: Component, ...rest }) => {\n  const toast = Toast()\n \n  const userRole = GetUserRole()\n  if(userRole !== 2){\n    toast.addNewToast({mensage: 'Realize login como SuperUsário!', myType: 'warning'})\n  }\n\n  return (\n    <Route \n      {...rest}\n      render={props =>\n        userRole === 2 ? (                                                                   \n          <Component {...props} />                                                    \n        ) : (\n          <Redirect to={{pathname:\"/login\", state: {from: props.location }}} />    \n        )\n      }\n    />\n  )\n}","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/infra/MyHeader/MyHeader.tsx",[],"/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/patterns/NavBar/NavBar.tsx",["277","278","279","280","281","282"],"import React, { useState, useEffect } from 'react'\nimport styled, {css} from 'styled-components'\nimport { Link, useHistory  } from 'react-router-dom'\n\n// Foundation\nimport Typography, { Types, ButtonSize, HeadingSize, CaptionSize } from '../../foudation/Typography'\nimport MainColors, { NeutralColors } from '../../foudation/Colors'\nimport Spaces from '../../foudation/Spaces'\nimport Shadows from '../../foudation/Shadows'\n\n// Redux\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Patterns\nimport Toast from '../Toast'\n\n// Logo\nimport Logo from '../../../assets/logo.png'\n\n// Auth\nimport { UserLogout } from '../../../utils/auth'\n\nexport default function NavBar() {\n\n  // const dispathc = useDispatch()\n  // dispathc({ type: 'CHANGE_VIES_SIDBAR' })\n\n  let roleUser : any = useSelector(state => state)\n  roleUser = roleUser.userRole\n  console.log(roleUser)\n  \n  const [openNavBar, setOpenNavBar] = useState(false)\n  const [userLogged, setUserLogged] = useState(false)\n\n  const toast = Toast()\n  const history  = useHistory()\n  const dispatch = useDispatch()\n\n  const myLink = (name : string) =>{\n    return(\n      <TextLink style={{cursor: 'pointer'}} > \n        <Typography type={Types.title} size={CaptionSize.caption1} color={NeutralColors.textDetails} style={{fontWeight: 600}}>\n          {name}  \n        </Typography>\n      </TextLink>\n    )\n  }\n\n  function MakeLogout(){\n    dispatch({type: 'CHANGE_ROLE_USER', value: 0})\n\n    UserLogout()\n    toast.addNewToast({mensage: 'Deslogado com sucesso!', myType: 'success'})\n    history.push(\"/login\")\n  }\n\n  return (\n    <header>\n      <Container>\n        <Content backGroundColor={ MainColors.secondary} spaces={Spaces} shadow={Shadows.shadow2} >\n\n          <ContainerLogo>\n            <img src={Logo} alt=\"logo\"/>\n          </ContainerLogo>\n          <LinksContainer logged={roleUser} >\n            {\n              roleUser == 2 ? (\n                <Link to='/superuser' >\n                  {myLink('Super Usuário')}\n                </Link>\n              ) : (\n                null\n              )\n            }\n\n            <Link to='/' >\n              {myLink('Validar Documento')}\n            </Link>\n\n            {\n              roleUser !== 0 ? (\n                <Link to='/home' >\n                  {myLink('Home')}\n                </Link>\n              ) : (\n                <Link to='/login' >\n                  {myLink('Login')}\n                </Link>\n              )\n            }\n            {\n              roleUser !== 0 ? (\n                <div onClick={() => MakeLogout()} >\n                  {myLink('Logout')}\n                </div>\n              ) : (\n                <Link to='/register' >\n                  {myLink('Register')}\n                </Link>\n              )\n            }\n\n          </LinksContainer>\n\n\n        </Content>\n      </Container>\n     \n      <LinksContainerResponsive active={openNavBar}>\n        <div>\n            {\n              roleUser == 2 ? (\n                <Link to='/superuser' >\n                  {myLink('Super Usuário')}\n                </Link>\n              ) : (\n                null\n              )\n            }\n          <Link to='/' >\n            {myLink('Validar Documento')}\n          </Link>\n          {\n            userLogged ? (\n              <Link to='/home' >\n                {myLink('Home')}\n              </Link>\n            ) : (\n              <Link to='/login' >\n                {myLink('Login')}\n              </Link>\n            )\n          }\n          {\n            userLogged ? (\n              <div onClick={() => MakeLogout() } >\n                {myLink('Logout')}\n              </div>\n            ) : (\n              <Link to='/register' >\n                {myLink('Register')}\n              </Link>\n            )\n          }\n        </div>\n      </LinksContainerResponsive>\n      <ButtonNavbar onClick={() => setOpenNavBar(!openNavBar)} active={openNavBar} >\n        <div></div>\n        <div></div>\n        <div></div>\n      </ButtonNavbar>\n    </header>\n\n  )\n}\n\ninterface ContentProps {\n  backGroundColor:  string,\n  shadow: string,\n  spaces: {\n    horizontalSpacesSite1: string,\n    horizontalSpacesSite2: string,\n  }\n}\n\ninterface LinksContainerResponsiveProps {\n  active: boolean,\n}\n\ninterface LinksContainerProps {\n  logged: any,\n}\n\ninterface ButtonNavbarProps {\n  active: boolean,\n}\n\nconst Container = styled.div`\n`\n\nconst Content = styled.div<ContentProps>`\n  height: 80px;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 20;\n\n  background-color: ${props => props.backGroundColor};\n  padding: 0 ${props => props.spaces.horizontalSpacesSite1};\n  box-shadow: ${props => props.shadow};\n\n  @media(max-width: 1200px){\n    padding: 0 ${props => props.spaces.horizontalSpacesSite2};\n  }\n\n`\n\nconst ContainerLogo = styled.div`\n    cursor: pointer;\n    > img {\n      width: 162px;\n      height: 30px\n    }\n` \n\nconst LinksContainer = styled.div<LinksContainerProps>`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n\n  ${props => \n    props.logged && props.logged === 2 &&\n    css `\n      max-width: 600px;\n    ` \n    };\n\n  ${props => \n    props.logged && props.logged !== 2 &&\n    css `\n      max-width: 400px;\n    ` \n    };\n\n  @media(max-width: 700px){\n    display: none;\n  }\n` \n\nconst TextLink = styled.div`\n  \n`\n\nconst ButtonNavbar = styled.button<ButtonNavbarProps>`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 3rem;\n  height: 3rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  z-index: 25;\n  outline: none;\n\n  > div {\n    width: 3rem;\n    height: 0.25rem;\n    background: #323654;\n    border-radius: 10px;\n    transition: all 0.3s linear 0s;\n    position: relative;\n    transform-origin: 1px center;\n\n    &:nth-child(1){\n      transform: ${props => props.active ? 'rotate(+45deg)' : 'rotate(0)' }\n    }\n\n    &:nth-child(2){\n      opacity: ${props => props.active ? 0 : 1}\n    }\n\n    &:nth-child(3){\n      transform: ${props => props.active ? 'rotate(-45deg)' : 'rotate(0)' }\n    }\n  }\n\n  display: none;\n  @media(max-width: 700px){\n    display: flex;\n  }\n`\n\nconst LinksContainerResponsive = styled.div<LinksContainerResponsiveProps>`\n  height: 100%;\n  background: #ffffff;\n  box-shadow: rgba(0, 0, 0, 0.5) 2px 0px 5px;\n  position: fixed;\n  top: 0px;\n  right: 0px;\n  width: 70%;\n  max-width: 400px;\n  transition: transform 0.3s ease-out 0s;\n  z-index: 20;\n  transform: translateX(0px);\n  transform: ${props => props.active ? 'translateX(0px)' : 'translateX(100%)' };\n\n  > div {\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    > div {\n      margin-bottom: 20px;\n    }\n  }\n\n`","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/store/index.js",[],["283","284"],"/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/utils/auth.tsx",["285","286","287","288","289"],"import { AxiosRequestConfig, AxiosResponse } from \"axios\"\nimport { useDispatch } from \"react-redux\"\nimport API from \"./api\"\nimport env from \"react-dotenv\";\n\ninterface UserProps {\n  id?: string,\n  email?: string,\n  password?: string,\n  identification?: string,\n  name?: string,\n  nickname?: string,\n}\n\n// Login de usuário\nexport async function UserLogin({email, password} : UserProps) : Promise<any> {\n\n  const headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n  const params = {\n    email: email,\n    password: password,\n  }\n\n  let success = false\n\n  try {\n    const res = await API.post<UserProps>('user/auth', params )\n    UserSaveLogin(res.data)\n    return true\n\n  } catch(err) {\n    return err.response.data.error\n  }\n\n\n}\n\n// Registro de usuário\nexport async function UserRegister({ email, password, identification, name, nickname } : UserProps ){\n\n  const headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n\n  const params = {\n    email: email,\n    password: password,\n    identification: identification,\n    name: name,\n    nickname: nickname,\n    admin: false\n  }\n\n  console.log(env.BASE_URL)\n\n  const result = await fetch(env.BASE_URL ? env.BASE_URL + '/user': '', {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(params)\n  })\n\n  const userResponse = await result.json()\n\n  if (userResponse.error){\n    return userResponse.error\n  } else {\n    UserSaveLogin(userResponse)\n    return true \n  }\n}\n\n// Deslogar\nexport function UserLogout(){\n  sessionStorage.clear()\n  return true\n}\n\n// Salvar usuário no local storage\nexport function UserSaveLogin(user : any){\n  sessionStorage.setItem('user', JSON.stringify(user))\n}\n\n// Retorna o usuario logado\nexport function GetUser(viewAdm = false){\n\n  let user\n  let userString\n\n  if(viewAdm){\n    userString = sessionStorage.getItem('userView');\n  } else {\n    userString = sessionStorage.getItem('user');\n  } \n  if(userString !== null){\n    user = JSON.parse(userString);\n    return user.user\n  } else {\n    return false\n  }\n}\n\nexport async function UpdateUser(userIdAdm: any = false){\n  const user = GetUser()\n  if(userIdAdm){\n    await API.get(`user/${userIdAdm.id }`)\n    .then(res => {\n      sessionStorage.setItem('userView', JSON.stringify(res.data))\n      console.log(1111111111111111111111111111111)\n\n    })\n    .catch(err => {\n      console.log(err.response)\n    })\n  }else {\n    API.get(`user/${user.id}`)\n    .then(res => {\n      UserSaveLogin(res.data)\n    })\n    .catch(err => {\n      console.log(err.response)\n    })\n  }\n  \n}\n\n// Retorna o token do usuário\nexport function GetToken(){\n  const user = GetUser()\n  return user.token\n}\n\n// Retorna qual o cargo do usuário\nexport function GetUserRole(){\n  const dispatch = useDispatch()\n  \n  const user = GetUser()\n  console.log(user)\n  \n  if(user){\n    const role = user.admin \n    dispatch({type: 'CHANGE_ROLE_USER', value: role ? 2 : 1})\n    return role ? 2 : 1\n\n  } else {\n    dispatch({type: 'CHANGE_ROLE_USER', value: 0})\n    return 0\n  }\n}\n\nexport function GetUserId(viewAdmActive = false){\n  if(viewAdmActive){\n    const user = GetUser(viewAdmActive)\n    return user.id\n  } else {\n    const user = GetUser()\n    return user.id\n  }\n}","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/patterns/Toast/index.tsx",[],"/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/pages/Login/index.tsx",["290","291","292"],"import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\n// Patterns\nimport BoxContainer from '../../components/patterns/BoxContainer/BoxContainer'\n\n// Foundation\nimport Typography, { Types, ButtonSize, HeadingSize, CaptionSize } from '../../components/foudation/Typography'\nimport MainColors, { NeutralColors }  from '../../components/foudation/Colors'\nimport Spaces from '../../components/foudation/Spaces'\n\n\n// Primitives\nimport MyButton from '../../components/primitives/Button'\nimport MyInput from '../../components/primitives/MyInput'\n\n// API\nimport { UserLogin } from '../../utils/auth'\nimport { useHistory } from 'react-router'\nimport Toast from '../../components/patterns/Toast'\n\n\nexport default function Login() {\n\n  const [userEmail, setUserEmail] = useState('')\n  const [userPassword, setUserPassword] = useState('')\n\n  const [errorLogin, setErrorLogin] = useState('')\n  const [errorEmail, setErrorEmail] = useState('')\n  const [errorPassword, setErrorPassword] = useState('')\n\n  const history = useHistory()\n  const toast = Toast()\n\n  async function MakeLogin(){\n    if(userEmail === ''){\n      setErrorEmail('*Campo de email obrigatório!')\n      toast.addNewToast({ mensage: 'Campo de email obrigatório!', myType: 'error' })\n      return\n    }\n\n    if(userPassword === ''){\n      setErrorPassword('*Campo de senha obrigatório!')\n      toast.addNewToast({ mensage: 'Campo de senha obrigatório!', myType: 'error' })\n\n      return\n    }\n\n    setErrorEmail('')\n    setErrorPassword('')\n\n    const sucessLogin = await UserLogin({email: userEmail, password: userPassword})\n\n    if( sucessLogin !== true  ){\n      toast.addNewToast({ mensage: `${sucessLogin}`, myType: 'error' })\n      setErrorLogin(sucessLogin)\n    } else {\n      toast.addNewToast({ mensage: 'Login realizado com sucesso', myType: 'success' })\n      history.push('/home')\n    }\n  } \n\n  return (\n    <Container space={Spaces} >\n\n          <Content>\n            <BoxContainer >\n              <ContentInput style={{padding: '20px'}} >\n\n                <HeadContainer>\n                  <Typography type={Types.title} size={HeadingSize.heading2} color={NeutralColors.textDetails} style={{fontWeight: 500}} >\n                    Login\n                  </Typography>\n                </HeadContainer>\n\n                <InputContent>\n                  <Typography type={Types.title} size={HeadingSize.heading5} color={NeutralColors.textDetails} style={{fontWeight: 500}} >\n                    Email:\n                  </Typography>\n                  <MyInput type='text' textplaceholder='Ex: teste@email.com' value={userEmail} onChange={(e) => setUserEmail(e.target.value)} />\n                  <ErrorMensage>\n                    {errorEmail}\n                  </ErrorMensage>\n                </InputContent>\n\n                <InputContent>\n                  <Typography type={Types.title} size={HeadingSize.heading5} color={NeutralColors.textDetails} style={{fontWeight: 500}} >\n                    Senha:\n                  </Typography>\n                  <MyInput type='password' textplaceholder='Ex: *****' value={userPassword} onChange={(e) => setUserPassword(e.target.value)} />\n                  <ErrorMensage>\n                    {errorPassword}\n                  </ErrorMensage>\n                </InputContent>\n\n                <ErrorMensage>\n                  {errorLogin}\n                </ErrorMensage>\n\n                <ContainerButton>\n                  <MyButton myFunction={() => MakeLogin()} >\n                    <Typography type={Types.body} size={HeadingSize.heading6} color={NeutralColors.textPrimary}>\n                      Logar\n                    </Typography>\n                  </MyButton>\n                </ContainerButton>\n\n              </ContentInput>\n            </BoxContainer>\n          </Content>\n        </Container>  \n  )\n}\n\ninterface ContainerProps {\n  space: {\n    horizontalSpacesSite1: string,\n    horizontalSpacesSite2: string,\n  }\n}\nconst Container = styled.div<ContainerProps>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  ${(props) =>\n    props.space &&\n    css`\n          padding: 12.78vh ${props.space.horizontalSpacesSite1};\n    `}\n  \n  @media (max-width: 1200px){\n    ${(props) =>\n      props.space &&\n      css`\n            padding: 12.78vh ${props.space.horizontalSpacesSite2};\n      `}\n  }\n`\n\nconst Content = styled.div`\n  max-width: 400px;\n  width: 100%;\n  height: 400px;\n`\n\nconst ContentInput = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around\n`\n\nconst HeadContainer = styled.div`\n\n`\n\nconst InputContent = styled.div`\n  > input {\n  }\n`\n\nconst ContainerButton = styled.div`\n  width: 120px;\n  height: 45px;\n`\n\nconst ErrorMensage = styled.p`\n  outline: none;\n  color: red;\n  font-size: 1.25rem;\n  font-family: 'Roboto';\n\n`","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/pages/SuperUser/index.tsx",["293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310"],"import React, { useState, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\n\n// Patterns\nimport BoxContainer from '../../components/patterns/BoxContainer/BoxContainer'\n\n// Foundation\nimport Typography, { Types, ButtonSize, HeadingSize, CaptionSize } from '../../components/foudation/Typography'\nimport MainColors, { NeutralColors }  from '../../components/foudation/Colors'\nimport Spaces from '../../components/foudation/Spaces'\n\n\n// Primitives\nimport MyButton from '../../components/primitives/Button'\nimport MyInput from '../../components/primitives/MyInput'\n\n// API\nimport { GetToken, UserLogin } from '../../utils/auth'\nimport API from '../../utils/api'\n\n// Componentes externos\nimport { AiOutlineFileImage, AiOutlineFilePdf } from 'react-icons/ai'\nimport { FaTrashAlt, FaFileDownload } from 'react-icons/fa'\nimport DataTable from 'react-data-table-component'\nimport { Link } from 'react-router-dom'\nimport Toast from '../../components/patterns/Toast'\nimport { FiEye, FiTrash } from 'react-icons/fi'\n\nexport default function SuperUser() {\n\n  const [myUsers, setMyUsers] = useState<any>([])\n\n  useEffect(() => {\n    GetAllUsers()\n  }, [])\n\n  const toast = Toast()\n\n  async function GetAllUsers(){\n    API.get('user')\n      .then(res => {\n        console.log(res)\n        setMyUsers(res.data.users)\n      })\n      .catch(err => {\n        console.log(err.response)\n        console.log(err)\n      })\n  } \n\n  // Colunas da tabela\n  const columnsDoc = [\n    {\n      name: 'id',\n      selector: 'id',\n      sortable: true,\n      maxWidth: '400px',\n    },\n    {\n      name: 'Nome',\n      selector: 'name',\n      sortable: true,\n      maxWidth: '400px',\n    },\n    {\n      name: 'CPF',\n      selector: 'identification',\n      sortable: true,\n      maxWidth: '400px',\n    },\n    {\n      name: 'Email',\n      selector: 'email',\n      sortable: true,        \n      maxWidth: '400px',\n    },\n    {\n      name: 'Visualizar',\n      maxWidth: '400px',\n      cell: (row: any, index: any, column: any, id: any) => ViewUser(row)\n    },\n    {\n      name: 'Deletar',\n      maxWidth: '400px',\n      cell: (row: any, index: any, column: any, id: any) => DeleteUser(row)\n    },\n  ];\n\n  function ViewUser(row: any){\n\n    return(\n      <ContainerDonwloadButton>\n        <Link to={`/home/${row.id}`}>\n          <FiEye size={30} />\n        </Link>\n      </ContainerDonwloadButton>\n    )\n  }\n\n  function DeleteUser(row){\n\n    const delet = async (id) => {\n      API.delete(`user/${id}`)\n        .then(res => {\n          toast.addNewToast({mensage: 'Usuário deletado com sucesso', myType: 'success'})\n          GetAllUsers()\n        })\n        .catch(err => {\n          toast.addNewToast({mensage: 'Erro ao deletar usuário', myType: 'error'})\n        })\n    }\n\n    return(\n      <ContainerDonwloadButton onClick={() => delet(row.id)} >\n        <FiTrash size={30}/>\n      </ContainerDonwloadButton>\n    )\n  }\n\n  return (\n    <Container space={Spaces}>\n  \n      <BoxContainer>\n        <ContainerDocsUser>\n          <DataTable\n              title=\"Usuário do sistema\"\n              columns={columnsDoc}\n              data={myUsers}\n              pagination\n              customStyles={customStyles}\n            />\n        </ContainerDocsUser>\n      </BoxContainer>\n\n    </Container>\n  )\n}\n\n// Estilização da tabela\nconst customStyles = {\n  header: {\n    style: {\n      fontFamily: 'Open Sans',\n      fontSize: '1.5rem',\n      color: '#323654'\n    },\n  },\n  headCells: {\n    style: {\n      fontFamily: 'Open Sans',\n      fontSize: '1.25rem',\n      color: '#323654'\n    },\n  },\n  cells: {\n    style: {\n      fontFamily: 'Open Sans',\n      fontSize: '1.125rem',\n      color: '#323654'\n    },\n  },\n}\n\ninterface ContainerProps {\n  space: {\n    horizontalSpacesSite1: string,\n    horizontalSpacesSite2: string\n  }\n}\n\n// Estilização\nconst Container = styled.div<ContainerProps>`\n  margin-top: 80px;\n  ${(props) =>\n    props.space &&\n    css`\n          padding: 10.78vh ${props.space.horizontalSpacesSite1};\n    `}\n  \n  @media (max-width: 1200px){\n    ${(props) =>\n      props.space &&\n      css`\n            padding: 10.78vh ${props.space.horizontalSpacesSite2};\n      `}\n  }\n`\n\nconst ContainerHeaderUser = styled.div`\n  height: 120px;\n  width: 100%;\n  margin-bottom: 40px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 25px;\n`\n\nconst ContainerUploadButton = styled.div`\n  width: 120px;\n  height: 45px;\n  \n`\n\nconst ContentPerfil = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  > img {\n    width: 80px;\n    height: 80px;\n    border-radius: 50%;\n    object-fit: cover;\n    margin-right: 20px;\n    cursor: pointer;\n  }\n`\n\nconst ContainerDocsUser = styled.div`\n  min-height: 400px;\n  height: auto;\n  width: 100%;\n  padding: 25px 25px;\n`\n\nconst ContainerDonwloadButton = styled.div`\n  > svg {\n    color: #7E7E7E;\n    transition: all 0.5s ease;\n    cursor: pointer;\n  }\n\n  > svg:hover {\n    color: #123B6E;\n  }\n`","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/pages/PublicHome/index.tsx",["311","312","313","314","315","316","317","318","319","320","321"],"import React, { useState, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\n\n// Patterns\nimport BoxContainer from '../../components/patterns/BoxContainer/BoxContainer'\nimport Toast from '../../components/patterns/Toast'\n\n// Foundation\nimport Typography, { Types, ButtonSize, HeadingSize, CaptionSize } from '../../components/foudation/Typography'\nimport MainColors, { NeutralColors }  from '../../components/foudation/Colors'\nimport Spaces from '../../components/foudation/Spaces'\n\n\n// Primitives\nimport MyButton from '../../components/primitives/Button'\nimport MyInput from '../../components/primitives/MyInput'\n\n// Componentes externos\nimport {useDropzone} from 'react-dropzone';\nimport { AiOutlineFileImage, AiOutlineFilePdf } from 'react-icons/ai'\nimport { FiFile } from 'react-icons/fi'\nimport API from '../../utils/api'\n\nexport default function PublicHome() {\n\n  const [motivation, setMotivation] = useState<any>('')\n  const [documentValidationId, setDocumentValidationId] = useState<any>('')\n  const [previewImages, setPreviewImages] = useState<any>([])\n  const [validateDocument, setValidateDocument] = useState<any>([])\n  \n  const toast = Toast()\n\n  // Tipos de aruqivos aceitos\n  const typeFiles = ['image/jpeg', 'application/pdf', 'image/png', 'text/plain', 'application/msword']\n\n  // Inincia o DropZone\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    maxFiles: 1,\n    onDrop: acceptedFiles => {\n      setPreviewImages(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  \n  // Apresenta um preview das imagens ou pdf\n  const myImagesPreview = previewImages.map(file => {\n    const intType = typeFiles.indexOf(file.type)\n\n    switch (intType) {\n      case 0:\n        return (\n          <ImageDropZonePreview key={file.preview}>\n            <img\n              src={file.preview}\n              style={{width: '150px', height: '150px', objectFit: 'cover'}}\n            />\n            <span> {file.path} </span>\n          </ImageDropZonePreview>\n        )\n      case 1:\n        return (\n          <ImageDropZonePreview key={file.preview}>\n            <FiFile  size='150' color='black' />\n            <span> {file.path} </span>\n          </ImageDropZonePreview>\n        )\n      case 2:\n        return (\n          <ImageDropZonePreview key={file.preview}>\n            <img\n              src={file.preview}\n              style={{width: '150px', height: '150px', objectFit: 'cover'}}\n            />\n            <span> {file.path} </span>\n          </ImageDropZonePreview>\n        )\n      case 3:\n        return (\n          <ImageDropZonePreview key={file.preview}>\n            <FiFile  size='150' color='black' />\n            <span> {file.path} </span>\n          </ImageDropZonePreview>\n        )\n      case 4:\n        return (\n          <ImageDropZonePreview key={file.preview}>\n            <FiFile  size='150' color='black' />\n            <span> {file.path} </span>\n          </ImageDropZonePreview>\n        )\n      default:\n        break;\n    }\n  });\n\n  // Enviar documentos para a analize\n  async function SubmitImages() {\n\n    setValidateDocument([])\n\n\n    if(motivation === undefined || motivation === '' || documentValidationId === '' || acceptedFiles.length === 0){\n\n      toast.addNewToast({mensage: 'Preencha os campos vazios', myType: 'error'})\n      return \n    }\n\n    let newArray: Array<any>\n\n    for (let i = 0; i < acceptedFiles.length; i++) {\n      let error = false\n      const element = acceptedFiles[i]\n\n      if(typeFiles.indexOf(element.type) === -1) {\n\n        toast.addNewToast({mensage: `Tipo de arquivo inválido: ${element.type}`, myType: 'error'})\n        error = true\n      }\n\n      if(!error){\n        const formFile = new FormData()\n        formFile.append('file', element)\n        formFile.append('id', documentValidationId)\n        formFile.append('motivation', motivation)\n  \n        \n        API.post(`document/validate/${documentValidationId}`, formFile )\n        .then(res => {\n            toast.addNewToast({mensage: `Documento ${res.data.valid ? 'válido' : 'inválido'}`, myType: `${res.data.valid ? 'success' : 'warning'}`})\n            setValidateDocument([\n              {\n                file: element,\n                validate: res.data.valid\n              }\n            ])\n          })\n          .catch(res => {\n            console.log(res)\n            toast.addNewToast({mensage: 'Erro ao validar documento!', myType: 'error'})\n          })\n      }\n    }\n  }\n\n  return (\n    <Container space={Spaces} >\n\n      <BoxContainer>\n        <Content>\n\n          <ContainerDropZone>\n\n            <Typography type={Types.body} size={CaptionSize.caption1} color={NeutralColors.textDetails}>\n              Escolha o seu documento:\n            </Typography>\n\n            <ContentDropZone {...getRootProps({isDragActive, isDragAccept, isDragReject}) }>\n              <input {...getInputProps()} />\n\n              {\n                previewImages.length !== 0 ? (\n                  null\n                ) : (\n                  <p>Selecione ou arraste até 1 arquivo por vez (.pdf, .jpeg, .png, .txt, .doc)</p>\n                )\n              }\n              <ContainerPreviewImages>\n                {myImagesPreview}\n              </ContainerPreviewImages>\n\n            </ContentDropZone>\n            {\n              previewImages.length !== 0 ? (\n\n                <ClearButton>\n                  <MyButton myFunction={() => setPreviewImages([])} >\n                    <Typography type={Types.body} size={CaptionSize.caption1} color={NeutralColors.textPrimary}>\n                      Limpar\n                    </Typography>\n                  </MyButton>\n                </ClearButton>\n\n              ) : (\n                null\n              )\n            }\n          </ContainerDropZone>\n\n          <ContainerMotivation>\n            <Typography type={Types.body} size={CaptionSize.caption1} color={NeutralColors.textDetails} > Id do documento: </Typography> \n            <input value={documentValidationId} onChange={(e) => setDocumentValidationId(e.target.value)} placeholder='Ex: 123456789' />\n          </ContainerMotivation>\n\n\n          <ContainerMotivation>\n            <Typography type={Types.body} size={CaptionSize.caption1} color={NeutralColors.textDetails} > Motivação: </Typography> \n            <textarea value={motivation} onChange={(e) => setMotivation(e.target.value)} placeholder='Motivos para validar o documento' />\n          </ContainerMotivation>\n\n          <div>\n\n            <SendButton>\n              <MyButton myFunction={() => SubmitImages()} >\n                <Typography type={Types.body} size={CaptionSize.caption1} color={NeutralColors.textPrimary}>\n                  Analisar documento\n                </Typography>\n              </MyButton>\n            </SendButton>\n\n          </div>\n\n          <div style={{marginTop: '25px'}} >\n\n            {\n              validateDocument.length !== 0 && \n                validateDocument.map((element) => {\n\n                  const file = element.file\n\n                  const lastModify = new Date(file.lastModifiedDate)\n                  const fim = acceptedFiles[0]\n\n                  if(file.type === 'application/pdf'){\n                    return (\n                      <div key={file.preview} style={{margin:'5px 0'}} >\n                        <ConteinerResult >\n                          <AiOutlineFilePdf size='150' color='black' />\n                          <div style={{maxWidth: '430px'}} >\n                            <Typography type={Types.body} size={CaptionSize.caption1} color={NeutralColors.textDetails}>\n                              {file.name}\n                            </Typography>\n                          </div>\n                          <Typography>\n                            {\n                              element.validate ? (\n                                'Documento válido'\n                              ) : (\n                                'Documento inválido'\n                              )\n                            }\n                          </Typography>\n                        </ConteinerResult>\n                        <hr/>\n                      </div>\n                    )\n                  } else{\n                    return (\n                      <div key={file.preview} style={{margin:'5px 0'}} >\n                        <ConteinerResult >\n                          <AiOutlineFileImage  size='150' color='black' />\n                          <div style={{maxWidth: '430px'}} >\n                            <Typography type={Types.body} size={CaptionSize.caption1} color={NeutralColors.textDetails}>\n                              {file.name}\n                            </Typography>\n                          </div>\n                          <Typography>\n                            {\n                              element.validate ? (\n                                'Documento válido'\n                              ) : (\n                                'Documento inválido'\n                              )\n                            }\n                          </Typography>\n                        </ConteinerResult>\n                        <hr/>\n                      </div>\n                    )\n                  }\n                })\n            }\n          </div>\n          \n        </Content>\n\n      </BoxContainer>\n\n    </Container>\n  )\n}\n\ninterface ContainerProps {\n  space: {\n    horizontalSpacesSite1: string,\n    horizontalSpacesSite2: string,\n  }\n}\n\nconst Container = styled.div<ContainerProps>`\n\n  ${(props) =>\n    props.space &&\n    css`\n          padding: 12.78vh ${props.space.horizontalSpacesSite1};\n    `}\n  \n  @media (max-width: 1200px){\n    ${(props) =>\n      props.space &&\n      css`\n            padding: 12.78vh ${props.space.horizontalSpacesSite2};\n      `}\n  }\n`\n\nconst Content = styled.div`\n  height: auto;\n  width: 100%;\n  padding: 40px 15%;\n`\n\n// Dropzone\nconst ContainerDropZone = styled.div`\n  > p {\n    margin-bottom: 15px;\n  }\n\n  margin-bottom: 25px;\n`\n\nconst ContentDropZone = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 400px;\n  width: 100%;\n  border-width: 2px;\n  border-radius: 2px;\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border .24s ease-in-out;\n  position: relative;\n  margin-bottom: 15px;\n`\n\nconst ContainerPreviewImages = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  padding: 15px 15px;\n  height: 380px;\n  display: flex;\n  flex-wrap: wrap;\n  overflow: auto;\n`\n\nconst ImageDropZonePreview = styled.div`\n  margin: 0 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n  width: 150px;\n  height: 180px;\n  overflow: hidden;\n\n  > svg {\n    width: 150px;\n    height: 150px;\n  }\n`\n\n// Buttons\nconst ClearButton = styled.div`\n  width: 110px;\n  height: 35px;\n  > button {\n    background-color: rgb(67 113 171) !important;\n  }\n`\n\nconst SendButton = styled.div`\n  width: 240px;\n  height: 50px;\n`\n\n// Motivation\nconst ContainerMotivation = styled.div`\n  margin: 25px 0;\n\n  > p {\n    margin-bottom: 5px \n  }\n\n  > textarea{\n    margin: 5px 0;\n    min-width: 100%;\n    max-width: 100%;\n    min-height: 120px;\n    outline: none;\n    padding: 10px;\n    font-family: 'Roboto';\n    font-size: 1rem;\n  }\n\n  > input {\n    width: 100%;\n    height: 40px;\n    outline: none;\n    padding-left: 5px;\n    font-family: 'Roboto';\n    font-size: 1rem;\n  }\n`\n\n// Result \nconst ConteinerResult = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  justify-content: center;\n  align-items: center;\n  margin: 8px 0;\n`","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/pages/Register/index.tsx",["322","323","324","325","326"],"import React, { useState, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\n\n// Patterns\nimport BoxContainer from '../../components/patterns/BoxContainer/BoxContainer'\n\n// Foundation\nimport Typography, { Types, ButtonSize, HeadingSize, CaptionSize } from '../../components/foudation/Typography'\nimport MainColors, { NeutralColors }  from '../../components/foudation/Colors'\nimport Spaces from '../../components/foudation/Spaces'\n\n\n// Primitives\nimport MyButton from '../../components/primitives/Button'\nimport MyInput from '../../components/primitives/MyInput'\nimport { UserLogin, UserRegister } from '../../utils/auth'\nimport { useHistory } from 'react-router'\nimport Toast from '../../components/patterns/Toast'\n\nexport default function Register() {\n\n  const [userEmail, setUserEmail] = useState('')\n  const [userPassword, setUserPassword] = useState('')\n  const [userIdPublic, setUserIdPublic] = useState('')\n  const [userName, setUserName] = useState('')\n  const [userNickname, setUserNickname] = useState('')\n\n  const [errorLogin, setErrorLogin] = useState('')\n  const [errorEmail, setErrorEmail] = useState('')\n  const [errorPassword, setErrorPassword] = useState('')\n  const [errorIdPublic, setErrorIdPublic] = useState('')\n  const [errorName, setErrorName] = useState('')\n  const [errorNickName, setErrorNickName] = useState('')\n\n\n  const history = useHistory()\n  const toast = Toast()\n\n  // Verifica se Você está logado\n  useEffect(() => {  \n\n  }, [])\n\n\n  async function Regiter(){\n\n    if(userName === ''){\n      setErrorName('*Campo de nome obrigatório!')\n      return\n    }\n    setErrorName('')\n\n    if(userNickname === ''){\n      setErrorNickName('*Campo de nome obrigatório!')\n      return\n    }\n    setErrorNickName('')\n    \n    if(userIdPublic === ''){\n      setErrorIdPublic('*Campo de CPF obrigatório!')\n      return\n    }\n    setErrorIdPublic('')\n\n    if(userEmail === ''){\n      setErrorEmail('*Campo de email obrigatório!')\n      return\n    }\n    setErrorEmail('')\n\n\n    if(userPassword === ''){\n      setErrorPassword('*Campo de senha obrigatório!')\n      return\n    }\n    setErrorPassword('')\n\n    const userRegisted = await UserRegister({\n      email: userEmail,\n      password: userPassword,\n      identification: userIdPublic,\n      name: userName,\n      nickname: userName\n    })\n\n    if(userRegisted === true){\n      history.push('/home')\n      toast.addNewToast({mensage: 'Registrado com sucesso', myType: 'success'})\n    } else{\n      toast.addNewToast({mensage: `${userRegisted}`, myType: 'success'})\n    }\n  }\n\n  return (\n    <Container space={Spaces} >\n\n          <Content>\n            <BoxContainer >\n              <ContentInput style={{padding: '20px'}} >\n\n                <HeadContainer>\n                  <Typography type={Types.title} size={HeadingSize.heading2} color={NeutralColors.textDetails} style={{fontWeight: 500}} >\n                    Sign up\n                  </Typography>\n                </HeadContainer>\n\n                <InputContent>\n                  <Typography type={Types.title} size={HeadingSize.heading5} color={NeutralColors.textDetails} style={{fontWeight: 500}} >\n                    Nome:\n                  </Typography>\n                  <MyInput type='text' textplaceholder='Ex: Gustavo Lima' value={userName} onChange={(e) => setUserName(e.target.value)} />\n                  <ErrorMensage>\n                    {errorName}\n                  </ErrorMensage>\n                </InputContent>\n\n                <InputContent>\n                  <Typography type={Types.title} size={HeadingSize.heading5} color={NeutralColors.textDetails} style={{fontWeight: 500}} >\n                    Nickname:\n                  </Typography>\n                  <MyInput type='text' textplaceholder='Ex: Gustavo Lima' value={userNickname} onChange={(e) => setUserNickname(e.target.value)} />\n                  <ErrorMensage>\n                    {errorNickName}\n                  </ErrorMensage>\n                </InputContent>\n\n                <InputContent>\n                  <Typography type={Types.title} size={HeadingSize.heading5} color={NeutralColors.textDetails} style={{fontWeight: 500}} >\n                    CPF:\n                  </Typography>\n                  <MyInput type='text' textplaceholder='Ex:123-456-789-00' value={userIdPublic} onChange={(e) => setUserIdPublic(e.target.value)} />\n                  <ErrorMensage>\n                    {errorIdPublic}\n                  </ErrorMensage>\n                </InputContent>\n                \n                <InputContent>\n                  <Typography type={Types.title} size={HeadingSize.heading5} color={NeutralColors.textDetails} style={{fontWeight: 500}} >\n                    Email:\n                  </Typography>\n                  <MyInput type='text' textplaceholder='Ex: seuemail@email.com' value={userEmail} onChange={(e) => setUserEmail(e.target.value)} />\n                  <ErrorMensage>\n                    {errorEmail}\n                  </ErrorMensage>\n                </InputContent>\n                \n                <InputContent>\n                  <Typography type={Types.title} size={HeadingSize.heading5} color={NeutralColors.textDetails} style={{fontWeight: 500}} >\n                    Senha:\n                  </Typography>\n                  <MyInput type='password' textplaceholder='Ex: *****' value={userPassword} onChange={(e) => setUserPassword(e.target.value)} />\n                  <ErrorMensage>\n                    {errorPassword}\n                  </ErrorMensage>\n                </InputContent>\n\n                <ErrorMensage>\n                  {errorLogin}\n                </ErrorMensage>\n\n                <ContainerButton>\n                  <MyButton myFunction={() => Regiter()} >\n                    <Typography type={Types.body} size={HeadingSize.heading6} color={NeutralColors.textPrimary}>\n                      Registrar\n                    </Typography>\n                  </MyButton>\n                </ContainerButton>\n\n              </ContentInput>\n            </BoxContainer>\n          </Content>\n\n        </Container> \n  )\n}\n\ninterface ContainerProps {\n  space: {\n    horizontalSpacesSite1: string,\n    horizontalSpacesSite2: string,\n  }\n}\n\nconst Container = styled.div<ContainerProps>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  ${(props) =>\n    props.space &&\n    css`\n          padding: 12.78vh ${props.space.horizontalSpacesSite1};\n    `}\n  \n  @media (max-width: 1200px){\n    ${(props) =>\n      props.space &&\n      css`\n            padding: 12.78vh ${props.space.horizontalSpacesSite2};\n      `}\n  }\n`\n\nconst Content = styled.div`\n  max-width: 400px;\n  width: 100%;\n  height: 600px;\n`\n\nconst ContentInput = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around\n`\n\nconst HeadContainer = styled.div`\n\n`\n\nconst InputContent = styled.div`\n  > input {\n  }\n`\n\nconst ContainerButton = styled.div`\n  width: 120px;\n  height: 45px;\n`\n\nconst ErrorMensage = styled.p`\n  outline: none;\n  color: red;\n  font-size: 1.25rem;\n  font-family: 'Roboto';\n\n`","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/pages/AdmHome/index.tsx",["327","328","329","330","331","332","333","334","335","336","337","338","339"],"/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/foudation/Colors/index.ts",[],"/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/utils/api.tsx",[],"/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/foudation/Spaces/index.ts",[],"/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/foudation/Shadows/index.ts",[],"/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/foudation/Typography/index.tsx",[],"/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/patterns/BoxContainer/BoxContainer.tsx",[],"/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/patterns/Modal/Modal.tsx",["340","341","342","343","344","345","346","347"],"import React, { useState, useEffect, SetStateAction } from 'react'\nimport styled, { css } from 'styled-components'\n\n// Patterns\nimport BoxContainer from '../../patterns/BoxContainer/BoxContainer'\n\n\n// Foudation\nimport Typography, { Types, ButtonSize, HeadingSize, CaptionSize } from '../../foudation/Typography'\nimport MainColors, { NeutralColors }  from '../../foudation/Colors'\nimport Spaces from '../../foudation/Spaces'\n\n// Componentes externos\nimport { AiFillCloseCircle } from 'react-icons/ai'\nimport DataTable from 'react-data-table-component'\n\ninterface ModalProps {\n  children?: React.ReactChild | React.ReactChild[],\n  title?: string,\n  typeModal?: 'table' | string,\n  nameDoc?: string,\n  open?: boolean,\n  setOpenModal?: any,\n  data?: any,\n}\n\nexport default function Modal({ children, title='Nome do Modal', typeModal='table', nameDoc='Nome do Doc', open=true, setOpenModal, data=[{data: '12/01/2020', motivation: 'Um grande motivo' }] }: ModalProps) {\n\n\n  function DataTime(row: any){\n    return(\n      <Typography type={Types.body} color={NeutralColors.textDetails} size={HeadingSize.heading7}  >\n        {new Date(row.timestamp).toLocaleDateString()}\n      </Typography>\n    )\n  }\n\n  const columnsDoc = [\n    {\n      name: 'Data',\n      selector: 'timestamp',\n      sortable: true,\n      maxWidth: '400px',\n      cell: (row: any, index: any, column: any, id: any) => DataTime(row)\n    },\n    {\n      name: 'Motivação',\n      selector: 'motivation',\n      wrap: true,\n      sortable: true,\n    },\n  ];\n\n  const element = [\n    {\n      data: '12/09/12',\n      motivation: 'Um motivo qualquer para validar documento'\n    },\n    {\n      data: '13/10/20',\n      motivation: 'Outro motivo qualquer para validar documento'\n    }\n  ]\n\n  function CloseModal(event : any){\n    let modal = document.getElementById(\"modal\");\n\n    if (!modal?.contains(event?.target)) {\n      setOpenModal(false)\n    }\n\n  }\n\n  if(open){\n    return (\n      <Overlay id='overlay' onClick={(e: any)=> CloseModal(e)} >\n        <Container id='modal'  >\n          <BoxContainer>\n\n            <Header>\n              <Typography>\n                {title}\n              </Typography>\n              <AiFillCloseCircle size='40' color='black' onClick={() => setOpenModal(false)} />\n            </Header>\n\n            <Content>\n              {\n                typeModal === 'table' ?                 \n                  element.length !== 0 ? (\n                    <DataTable\n                      title={nameDoc}\n                      columns={columnsDoc}\n                      data={data}\n                      customStyles={customStyles}\n                    />\n                  ) : (\n                    <p> Nenhum Log </p>\n                  )\n                : (\n                  null\n                )\n              }\n              {children}\n            </Content>\n\n\n          </BoxContainer>\n        </Container>\n      </Overlay>\n    )\n  }else {\n    return (\n      <></>\n    )\n  }\n}\n\n// Estilização da tabela\nconst customStyles = {\n  header: {\n    style: {\n      fontFamily: 'Open Sans',\n      fontSize: '1.5rem',\n      color: '#323654'\n    },\n  },\n  headCells: {\n    style: {\n      fontFamily: 'Open Sans',\n      fontSize: '1.25rem',\n      color: '#323654'\n    },\n  },\n  cells: {\n    style: {\n      fontFamily: 'Open Sans',\n      fontSize: '1.125rem',\n      color: '#323654'\n    },\n  },\n}\n\nconst Overlay = styled.div`\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  background-color: #00000082;\n  z-index: 9;\n  top: 0;\n  left: 0;\n`\n\nconst Container = styled.div`\n  max-width: 450px;\n  width: 100%;\n  height: 400px;\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 10;\n  padding: 0 20px;\n`\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-top: 20px;\n\n  > svg {\n    cursor: pointer;\n  }\n`\n\nconst Content = styled.div`\n  overflow: auto;\n  max-height: 320px;\n`","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/primitives/MyInput/index.tsx",["348"],"import React from \"react\"\nimport styled from \"styled-components\"\n\ninterface MyInput extends  React.BaseHTMLAttributes<HTMLInputElement>{\n    textplaceholder?: string,\n}\n\nfunction MyInput({textplaceholder = '', ...props}) {\n    return (\n        <InputComponent placeholder={textplaceholder} {...props} />\n    )\n}\n\nconst InputComponent = styled.input`\n    background: #0f37690a;\n    border: 1px solid #123B6E;\n    border-radius: 6px;\n    padding: 14px 16px;\n    font-size: 15px;\n    outline: none;\n    width: 100%;\n\n    &:focus {\n        border: 1px solid #123B6E;\n    }\n`\n\nexport default MyInput","/home/gabriel/Projects/University/Nuvem/trabalho3/frontend_trabalho2/src/components/primitives/Button/index.tsx",["349","350","351","352","353","354","355","356"],"import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\n// Foundation\nimport Typography, { Types, ButtonSize, HeadingSize, CaptionSize } from '../../foudation/Typography'\nimport MainColors, { NeutralColors } from '../../foudation/Colors'\nimport Spaces from '../../foudation/Spaces'\nimport Shadows from '../../foudation/Shadows'\n\ninterface MyButtonProps  extends React.BaseHTMLAttributes<HTMLButtonElement> {\n  children?: React.ReactChild | React.ReactChild[],\n  myFunction?: any,\n  leftIcon?: any,\n}\n\nexport default function MyButton({ children, myFunction, leftIcon, ...props } : MyButtonProps) {\n\n\n  const [wavePosition, setWavePosition] = useState({top: 0, left: 0, scale: 0, opacity: 0})\n\n  const [view, setView] = useState()\n\n  async function AnimateWave(event : any){\n \n\n    const button = event.target\n\n    // Get position values \n    const positionButton = button.getBoundingClientRect()\n    const top = Math.abs(positionButton.top - event.clientY)\n    const left = Math.abs(positionButton.left - event.clientX)\n    const scale = Math.min(positionButton.height, positionButton.width)\n\n    setWavePosition({ \n      top:  top,\n      left: left,\n      scale: scale,\n      opacity: 1\n    })\n    \n    setTimeout(()=> {\n      setWavePosition({ \n        top: top,\n        left: left,\n        scale: scale,\n        opacity: 0\n      })\n    }, 400)\n    setTimeout(()=> {\n      setWavePosition({ \n        top: top,\n        left: left,\n        scale: 0,\n        opacity: 0\n      })\n    }, 600)\n  }\n\n\n  function CallFunction(event :any){\n    \n    AnimateWave(event)\n    \n    myFunction && myFunction()\n    \n  }\n\n  return (\n    <Container onClick={event => CallFunction(event) }  style={{ backgroundColor: MainColors.primary, color: NeutralColors.textDetails, boxShadow: Shadows.shadow2 }} {...props}>\n      {leftIcon}\n      {children}\n      <Wave position={wavePosition}/>\n    </Container>\n  )\n}\n\ninterface WaveProps {\n  position: { \n    top: number,\n    left: number,\n    scale: number,\n    opacity: number,\n  }\n}\n\nconst Container = styled.button`\n  width: 100%;\n  height: 100%;\n  outline: none;\n  border: none;\n  border-radius: 16px;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n  transition: 0.5s ease all;\n  &:hover {\n    box-shadow: 0px 3px 6px rgba(52, 60, 88, 0.5) !important\n  }\n  > svg {\n    margin-right: 10px;\n  }\n`\n\nconst Wave = styled.span<WaveProps>`\n  pointer-events: none;\n\twidth: 1px;\n  height: 1px;\n\tbackground: transparent;\n  display: block;\n  /* Reset de posições */\n\tposition: absolute;\n\ttop: 0;\n  left: 0;\n  /* Importantes */\n  will-change: transform;\n  transform: translateX(var(--left)) translateY(var(--top));\n\n  ${(props) =>\n    props.position &&\n    css`\n          top: ${`${props.position.top}px`};\n          left: ${`${props.position.left}px`};\n          --scale: ${props.position.scale};\n          --opacity: ${props.position.opacity};\n  `}\n\n  &:after {\n    content: \"\";\n    display: block;\n    width: 100%;\n    border-radius: 50%;\n    width: 2px;\n    height: 2px;\n    background: rgba(255,255,255,.2);\n    /* Importantes */\n    will-change: transform;\n    transform: scale(var(--scale));\n    opacity: var(--opacity);\n    transition: transform 0.6s, opacity .3s;\n  }\n`",{"ruleId":"357","severity":1,"message":"358","line":3,"column":24,"nodeType":"359","messageId":"360","endLine":3,"endColumn":37},{"ruleId":"357","severity":1,"message":"361","line":3,"column":60,"nodeType":"359","messageId":"360","endLine":3,"endColumn":66},{"ruleId":"357","severity":1,"message":"362","line":14,"column":10,"nodeType":"359","messageId":"360","endLine":14,"endColumn":17},{"ruleId":"357","severity":1,"message":"363","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"357","severity":1,"message":"364","line":6,"column":29,"nodeType":"359","messageId":"360","endLine":6,"endColumn":39},{"ruleId":"357","severity":1,"message":"365","line":6,"column":41,"nodeType":"359","messageId":"360","endLine":6,"endColumn":52},{"ruleId":"357","severity":1,"message":"366","line":33,"column":22,"nodeType":"359","messageId":"360","endLine":33,"endColumn":35},{"ruleId":"367","severity":1,"message":"368","line":67,"column":24,"nodeType":"369","messageId":"370","endLine":67,"endColumn":26},{"ruleId":"367","severity":1,"message":"368","line":112,"column":24,"nodeType":"369","messageId":"370","endLine":112,"endColumn":26},{"ruleId":"357","severity":1,"message":"371","line":1,"column":10,"nodeType":"359","messageId":"360","endLine":1,"endColumn":28},{"ruleId":"357","severity":1,"message":"372","line":1,"column":30,"nodeType":"359","messageId":"360","endLine":1,"endColumn":43},{"ruleId":"357","severity":1,"message":"373","line":17,"column":9,"nodeType":"359","messageId":"360","endLine":17,"endColumn":16},{"ruleId":"357","severity":1,"message":"374","line":26,"column":7,"nodeType":"359","messageId":"360","endLine":26,"endColumn":14},{"ruleId":"357","severity":1,"message":"373","line":43,"column":9,"nodeType":"359","messageId":"360","endLine":43,"endColumn":16},{"ruleId":"357","severity":1,"message":"364","line":8,"column":29,"nodeType":"359","messageId":"360","endLine":8,"endColumn":39},{"ruleId":"357","severity":1,"message":"375","line":8,"column":54,"nodeType":"359","messageId":"360","endLine":8,"endColumn":65},{"ruleId":"357","severity":1,"message":"376","line":9,"column":8,"nodeType":"359","messageId":"360","endLine":9,"endColumn":18},{"ruleId":"357","severity":1,"message":"364","line":8,"column":29,"nodeType":"359","messageId":"360","endLine":8,"endColumn":39},{"ruleId":"357","severity":1,"message":"375","line":8,"column":54,"nodeType":"359","messageId":"360","endLine":8,"endColumn":65},{"ruleId":"357","severity":1,"message":"376","line":9,"column":8,"nodeType":"359","messageId":"360","endLine":9,"endColumn":18},{"ruleId":"357","severity":1,"message":"377","line":16,"column":10,"nodeType":"359","messageId":"360","endLine":16,"endColumn":19},{"ruleId":"357","severity":1,"message":"378","line":28,"column":22,"nodeType":"359","messageId":"360","endLine":28,"endColumn":35},{"ruleId":"357","severity":1,"message":"363","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"357","severity":1,"message":"364","line":9,"column":29,"nodeType":"359","messageId":"360","endLine":9,"endColumn":39},{"ruleId":"357","severity":1,"message":"365","line":9,"column":41,"nodeType":"359","messageId":"360","endLine":9,"endColumn":52},{"ruleId":"357","severity":1,"message":"376","line":10,"column":8,"nodeType":"359","messageId":"360","endLine":10,"endColumn":18},{"ruleId":"357","severity":1,"message":"379","line":16,"column":8,"nodeType":"359","messageId":"360","endLine":16,"endColumn":15},{"ruleId":"380","severity":1,"message":"381","line":54,"column":50,"nodeType":"382","messageId":"383","endLine":54,"endColumn":52},{"ruleId":"384","severity":1,"message":"385","line":61,"column":13,"nodeType":"386","endLine":64,"endColumn":15},{"ruleId":"384","severity":1,"message":"385","line":78,"column":13,"nodeType":"386","endLine":81,"endColumn":15},{"ruleId":"357","severity":1,"message":"387","line":116,"column":9,"nodeType":"359","messageId":"360","endLine":116,"endColumn":29},{"ruleId":"357","severity":1,"message":"388","line":228,"column":25,"nodeType":"359","messageId":"360","endLine":228,"endColumn":35},{"ruleId":"357","severity":1,"message":"389","line":229,"column":25,"nodeType":"359","messageId":"360","endLine":229,"endColumn":28},{"ruleId":"357","severity":1,"message":"364","line":9,"column":29,"nodeType":"359","messageId":"360","endLine":9,"endColumn":39},{"ruleId":"357","severity":1,"message":"375","line":9,"column":54,"nodeType":"359","messageId":"360","endLine":9,"endColumn":65},{"ruleId":"357","severity":1,"message":"376","line":10,"column":8,"nodeType":"359","messageId":"360","endLine":10,"endColumn":18},{"ruleId":"357","severity":1,"message":"377","line":18,"column":52,"nodeType":"359","messageId":"360","endLine":18,"endColumn":61},{"ruleId":"357","severity":1,"message":"390","line":48,"column":10,"nodeType":"359","messageId":"360","endLine":48,"endColumn":15},{"ruleId":"357","severity":1,"message":"391","line":55,"column":23,"nodeType":"359","messageId":"360","endLine":55,"endColumn":37},{"ruleId":"392","severity":1,"message":"393","line":131,"column":6,"nodeType":"394","endLine":131,"endColumn":8,"suggestions":"395"},{"ruleId":"357","severity":1,"message":"396","line":265,"column":13,"nodeType":"359","messageId":"360","endLine":265,"endColumn":19},{"ruleId":"357","severity":1,"message":"397","line":314,"column":11,"nodeType":"359","messageId":"360","endLine":314,"endColumn":20},{"ruleId":"398","severity":1,"message":"399","line":385,"column":16,"nodeType":"382","messageId":"400","endLine":387,"endColumn":10},{"ruleId":"357","severity":1,"message":"401","line":467,"column":11,"nodeType":"359","messageId":"360","endLine":467,"endColumn":19},{"ruleId":"357","severity":1,"message":"373","line":479,"column":11,"nodeType":"359","messageId":"360","endLine":479,"endColumn":18},{"ruleId":"357","severity":1,"message":"402","line":866,"column":7,"nodeType":"359","messageId":"360","endLine":866,"endColumn":30},{"ruleId":"357","severity":1,"message":"403","line":8,"column":8,"nodeType":"359","messageId":"360","endLine":8,"endColumn":18},{"ruleId":"357","severity":1,"message":"404","line":8,"column":22,"nodeType":"359","messageId":"360","endLine":8,"endColumn":27},{"ruleId":"357","severity":1,"message":"364","line":8,"column":29,"nodeType":"359","messageId":"360","endLine":8,"endColumn":39},{"ruleId":"357","severity":1,"message":"365","line":8,"column":41,"nodeType":"359","messageId":"360","endLine":8,"endColumn":52},{"ruleId":"357","severity":1,"message":"375","line":8,"column":54,"nodeType":"359","messageId":"360","endLine":8,"endColumn":65},{"ruleId":"357","severity":1,"message":"376","line":9,"column":8,"nodeType":"359","messageId":"360","endLine":9,"endColumn":18},{"ruleId":"357","severity":1,"message":"405","line":9,"column":22,"nodeType":"359","messageId":"360","endLine":9,"endColumn":35},{"ruleId":"357","severity":1,"message":"406","line":14,"column":8,"nodeType":"359","messageId":"360","endLine":14,"endColumn":16},{"ruleId":"357","severity":1,"message":"379","line":15,"column":8,"nodeType":"359","messageId":"360","endLine":15,"endColumn":15},{"ruleId":"357","severity":1,"message":"407","line":18,"column":10,"nodeType":"359","messageId":"360","endLine":18,"endColumn":18},{"ruleId":"357","severity":1,"message":"377","line":18,"column":20,"nodeType":"359","messageId":"360","endLine":18,"endColumn":29},{"ruleId":"357","severity":1,"message":"408","line":22,"column":10,"nodeType":"359","messageId":"360","endLine":22,"endColumn":28},{"ruleId":"357","severity":1,"message":"409","line":22,"column":30,"nodeType":"359","messageId":"360","endLine":22,"endColumn":46},{"ruleId":"357","severity":1,"message":"410","line":23,"column":10,"nodeType":"359","messageId":"360","endLine":23,"endColumn":20},{"ruleId":"357","severity":1,"message":"411","line":23,"column":22,"nodeType":"359","messageId":"360","endLine":23,"endColumn":36},{"ruleId":"357","severity":1,"message":"412","line":189,"column":7,"nodeType":"359","messageId":"360","endLine":189,"endColumn":26},{"ruleId":"357","severity":1,"message":"413","line":200,"column":7,"nodeType":"359","messageId":"360","endLine":200,"endColumn":28},{"ruleId":"357","severity":1,"message":"414","line":206,"column":7,"nodeType":"359","messageId":"360","endLine":206,"endColumn":20},{"ruleId":"357","severity":1,"message":"415","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"363","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"357","severity":1,"message":"416","line":1,"column":38,"nodeType":"359","messageId":"360","endLine":1,"endColumn":52},{"ruleId":"357","severity":1,"message":"417","line":2,"column":18,"nodeType":"359","messageId":"360","endLine":2,"endColumn":21},{"ruleId":"357","severity":1,"message":"364","line":9,"column":29,"nodeType":"359","messageId":"360","endLine":9,"endColumn":39},{"ruleId":"357","severity":1,"message":"375","line":9,"column":54,"nodeType":"359","messageId":"360","endLine":9,"endColumn":65},{"ruleId":"357","severity":1,"message":"376","line":10,"column":8,"nodeType":"359","messageId":"360","endLine":10,"endColumn":18},{"ruleId":"357","severity":1,"message":"418","line":11,"column":8,"nodeType":"359","messageId":"360","endLine":11,"endColumn":14},{"ruleId":"419","severity":1,"message":"420","line":8,"column":10,"nodeType":"359","messageId":"421","endLine":8,"endColumn":17},{"ruleId":"357","severity":1,"message":"403","line":5,"column":8,"nodeType":"359","messageId":"360","endLine":5,"endColumn":18},{"ruleId":"357","severity":1,"message":"404","line":5,"column":22,"nodeType":"359","messageId":"360","endLine":5,"endColumn":27},{"ruleId":"357","severity":1,"message":"364","line":5,"column":29,"nodeType":"359","messageId":"360","endLine":5,"endColumn":39},{"ruleId":"357","severity":1,"message":"365","line":5,"column":41,"nodeType":"359","messageId":"360","endLine":5,"endColumn":52},{"ruleId":"357","severity":1,"message":"375","line":5,"column":54,"nodeType":"359","messageId":"360","endLine":5,"endColumn":65},{"ruleId":"357","severity":1,"message":"418","line":7,"column":8,"nodeType":"359","messageId":"360","endLine":7,"endColumn":14},{"ruleId":"357","severity":1,"message":"422","line":21,"column":10,"nodeType":"359","messageId":"360","endLine":21,"endColumn":14},{"ruleId":"357","severity":1,"message":"423","line":21,"column":16,"nodeType":"359","messageId":"360","endLine":21,"endColumn":23},{"ruleId":"424","replacedBy":"425"},{"ruleId":"426","replacedBy":"427"},{"ruleId":"357","severity":1,"message":"358","line":3,"column":24,"nodeType":"359","messageId":"360","endLine":3,"endColumn":37},{"ruleId":"357","severity":1,"message":"361","line":3,"column":60,"nodeType":"359","messageId":"360","endLine":3,"endColumn":66},{"ruleId":"357","severity":1,"message":"362","line":14,"column":10,"nodeType":"359","messageId":"360","endLine":14,"endColumn":17},{"ruleId":"357","severity":1,"message":"363","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"357","severity":1,"message":"364","line":6,"column":29,"nodeType":"359","messageId":"360","endLine":6,"endColumn":39},{"ruleId":"357","severity":1,"message":"365","line":6,"column":41,"nodeType":"359","messageId":"360","endLine":6,"endColumn":52},{"ruleId":"357","severity":1,"message":"366","line":33,"column":22,"nodeType":"359","messageId":"360","endLine":33,"endColumn":35},{"ruleId":"367","severity":1,"message":"368","line":67,"column":24,"nodeType":"369","messageId":"370","endLine":67,"endColumn":26},{"ruleId":"367","severity":1,"message":"368","line":112,"column":24,"nodeType":"369","messageId":"370","endLine":112,"endColumn":26},{"ruleId":"424","replacedBy":"425"},{"ruleId":"426","replacedBy":"427"},{"ruleId":"357","severity":1,"message":"371","line":1,"column":10,"nodeType":"359","messageId":"360","endLine":1,"endColumn":28},{"ruleId":"357","severity":1,"message":"372","line":1,"column":30,"nodeType":"359","messageId":"360","endLine":1,"endColumn":43},{"ruleId":"357","severity":1,"message":"373","line":18,"column":9,"nodeType":"359","messageId":"360","endLine":18,"endColumn":16},{"ruleId":"357","severity":1,"message":"374","line":27,"column":7,"nodeType":"359","messageId":"360","endLine":27,"endColumn":14},{"ruleId":"357","severity":1,"message":"373","line":44,"column":9,"nodeType":"359","messageId":"360","endLine":44,"endColumn":16},{"ruleId":"357","severity":1,"message":"364","line":8,"column":29,"nodeType":"359","messageId":"360","endLine":8,"endColumn":39},{"ruleId":"357","severity":1,"message":"375","line":8,"column":54,"nodeType":"359","messageId":"360","endLine":8,"endColumn":65},{"ruleId":"357","severity":1,"message":"376","line":9,"column":8,"nodeType":"359","messageId":"360","endLine":9,"endColumn":18},{"ruleId":"357","severity":1,"message":"403","line":8,"column":8,"nodeType":"359","messageId":"360","endLine":8,"endColumn":18},{"ruleId":"357","severity":1,"message":"404","line":8,"column":22,"nodeType":"359","messageId":"360","endLine":8,"endColumn":27},{"ruleId":"357","severity":1,"message":"364","line":8,"column":29,"nodeType":"359","messageId":"360","endLine":8,"endColumn":39},{"ruleId":"357","severity":1,"message":"365","line":8,"column":41,"nodeType":"359","messageId":"360","endLine":8,"endColumn":52},{"ruleId":"357","severity":1,"message":"375","line":8,"column":54,"nodeType":"359","messageId":"360","endLine":8,"endColumn":65},{"ruleId":"357","severity":1,"message":"376","line":9,"column":8,"nodeType":"359","messageId":"360","endLine":9,"endColumn":18},{"ruleId":"357","severity":1,"message":"405","line":9,"column":22,"nodeType":"359","messageId":"360","endLine":9,"endColumn":35},{"ruleId":"357","severity":1,"message":"406","line":14,"column":8,"nodeType":"359","messageId":"360","endLine":14,"endColumn":16},{"ruleId":"357","severity":1,"message":"379","line":15,"column":8,"nodeType":"359","messageId":"360","endLine":15,"endColumn":15},{"ruleId":"357","severity":1,"message":"407","line":18,"column":10,"nodeType":"359","messageId":"360","endLine":18,"endColumn":18},{"ruleId":"357","severity":1,"message":"377","line":18,"column":20,"nodeType":"359","messageId":"360","endLine":18,"endColumn":29},{"ruleId":"357","severity":1,"message":"408","line":22,"column":10,"nodeType":"359","messageId":"360","endLine":22,"endColumn":28},{"ruleId":"357","severity":1,"message":"409","line":22,"column":30,"nodeType":"359","messageId":"360","endLine":22,"endColumn":46},{"ruleId":"357","severity":1,"message":"410","line":23,"column":10,"nodeType":"359","messageId":"360","endLine":23,"endColumn":20},{"ruleId":"357","severity":1,"message":"411","line":23,"column":22,"nodeType":"359","messageId":"360","endLine":23,"endColumn":36},{"ruleId":"357","severity":1,"message":"412","line":189,"column":7,"nodeType":"359","messageId":"360","endLine":189,"endColumn":26},{"ruleId":"357","severity":1,"message":"413","line":200,"column":7,"nodeType":"359","messageId":"360","endLine":200,"endColumn":28},{"ruleId":"357","severity":1,"message":"414","line":206,"column":7,"nodeType":"359","messageId":"360","endLine":206,"endColumn":20},{"ruleId":"357","severity":1,"message":"363","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"357","severity":1,"message":"364","line":9,"column":29,"nodeType":"359","messageId":"360","endLine":9,"endColumn":39},{"ruleId":"357","severity":1,"message":"365","line":9,"column":41,"nodeType":"359","messageId":"360","endLine":9,"endColumn":52},{"ruleId":"357","severity":1,"message":"376","line":10,"column":8,"nodeType":"359","messageId":"360","endLine":10,"endColumn":18},{"ruleId":"357","severity":1,"message":"379","line":16,"column":8,"nodeType":"359","messageId":"360","endLine":16,"endColumn":15},{"ruleId":"380","severity":1,"message":"381","line":54,"column":50,"nodeType":"382","messageId":"383","endLine":54,"endColumn":52},{"ruleId":"384","severity":1,"message":"385","line":61,"column":13,"nodeType":"386","endLine":64,"endColumn":15},{"ruleId":"384","severity":1,"message":"385","line":78,"column":13,"nodeType":"386","endLine":81,"endColumn":15},{"ruleId":"357","severity":1,"message":"387","line":116,"column":9,"nodeType":"359","messageId":"360","endLine":116,"endColumn":29},{"ruleId":"357","severity":1,"message":"388","line":228,"column":25,"nodeType":"359","messageId":"360","endLine":228,"endColumn":35},{"ruleId":"357","severity":1,"message":"389","line":229,"column":25,"nodeType":"359","messageId":"360","endLine":229,"endColumn":28},{"ruleId":"357","severity":1,"message":"364","line":8,"column":29,"nodeType":"359","messageId":"360","endLine":8,"endColumn":39},{"ruleId":"357","severity":1,"message":"375","line":8,"column":54,"nodeType":"359","messageId":"360","endLine":8,"endColumn":65},{"ruleId":"357","severity":1,"message":"376","line":9,"column":8,"nodeType":"359","messageId":"360","endLine":9,"endColumn":18},{"ruleId":"357","severity":1,"message":"377","line":16,"column":10,"nodeType":"359","messageId":"360","endLine":16,"endColumn":19},{"ruleId":"357","severity":1,"message":"378","line":28,"column":22,"nodeType":"359","messageId":"360","endLine":28,"endColumn":35},{"ruleId":"357","severity":1,"message":"364","line":9,"column":29,"nodeType":"359","messageId":"360","endLine":9,"endColumn":39},{"ruleId":"357","severity":1,"message":"375","line":9,"column":54,"nodeType":"359","messageId":"360","endLine":9,"endColumn":65},{"ruleId":"357","severity":1,"message":"376","line":10,"column":8,"nodeType":"359","messageId":"360","endLine":10,"endColumn":18},{"ruleId":"357","severity":1,"message":"377","line":18,"column":52,"nodeType":"359","messageId":"360","endLine":18,"endColumn":61},{"ruleId":"357","severity":1,"message":"390","line":48,"column":10,"nodeType":"359","messageId":"360","endLine":48,"endColumn":15},{"ruleId":"357","severity":1,"message":"391","line":55,"column":23,"nodeType":"359","messageId":"360","endLine":55,"endColumn":37},{"ruleId":"392","severity":1,"message":"393","line":131,"column":6,"nodeType":"394","endLine":131,"endColumn":8,"suggestions":"428"},{"ruleId":"357","severity":1,"message":"396","line":265,"column":13,"nodeType":"359","messageId":"360","endLine":265,"endColumn":19},{"ruleId":"357","severity":1,"message":"397","line":314,"column":11,"nodeType":"359","messageId":"360","endLine":314,"endColumn":20},{"ruleId":"398","severity":1,"message":"399","line":385,"column":16,"nodeType":"382","messageId":"400","endLine":387,"endColumn":10},{"ruleId":"357","severity":1,"message":"401","line":467,"column":11,"nodeType":"359","messageId":"360","endLine":467,"endColumn":19},{"ruleId":"357","severity":1,"message":"373","line":479,"column":11,"nodeType":"359","messageId":"360","endLine":479,"endColumn":18},{"ruleId":"357","severity":1,"message":"402","line":866,"column":7,"nodeType":"359","messageId":"360","endLine":866,"endColumn":30},{"ruleId":"357","severity":1,"message":"415","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"363","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"357","severity":1,"message":"416","line":1,"column":38,"nodeType":"359","messageId":"360","endLine":1,"endColumn":52},{"ruleId":"357","severity":1,"message":"417","line":2,"column":18,"nodeType":"359","messageId":"360","endLine":2,"endColumn":21},{"ruleId":"357","severity":1,"message":"364","line":9,"column":29,"nodeType":"359","messageId":"360","endLine":9,"endColumn":39},{"ruleId":"357","severity":1,"message":"375","line":9,"column":54,"nodeType":"359","messageId":"360","endLine":9,"endColumn":65},{"ruleId":"357","severity":1,"message":"376","line":10,"column":8,"nodeType":"359","messageId":"360","endLine":10,"endColumn":18},{"ruleId":"357","severity":1,"message":"418","line":11,"column":8,"nodeType":"359","messageId":"360","endLine":11,"endColumn":14},{"ruleId":"419","severity":1,"message":"420","line":8,"column":10,"nodeType":"359","messageId":"421","endLine":8,"endColumn":17},{"ruleId":"357","severity":1,"message":"403","line":5,"column":8,"nodeType":"359","messageId":"360","endLine":5,"endColumn":18},{"ruleId":"357","severity":1,"message":"404","line":5,"column":22,"nodeType":"359","messageId":"360","endLine":5,"endColumn":27},{"ruleId":"357","severity":1,"message":"364","line":5,"column":29,"nodeType":"359","messageId":"360","endLine":5,"endColumn":39},{"ruleId":"357","severity":1,"message":"365","line":5,"column":41,"nodeType":"359","messageId":"360","endLine":5,"endColumn":52},{"ruleId":"357","severity":1,"message":"375","line":5,"column":54,"nodeType":"359","messageId":"360","endLine":5,"endColumn":65},{"ruleId":"357","severity":1,"message":"418","line":7,"column":8,"nodeType":"359","messageId":"360","endLine":7,"endColumn":14},{"ruleId":"357","severity":1,"message":"422","line":21,"column":10,"nodeType":"359","messageId":"360","endLine":21,"endColumn":14},{"ruleId":"357","severity":1,"message":"423","line":21,"column":16,"nodeType":"359","messageId":"360","endLine":21,"endColumn":23},"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'GetUser' is defined but never used.","'useEffect' is defined but never used.","'ButtonSize' is defined but never used.","'HeadingSize' is defined but never used.","'setUserLogged' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AxiosRequestConfig' is defined but never used.","'AxiosResponse' is defined but never used.","'headers' is assigned a value but never used.","'success' is assigned a value but never used.","'CaptionSize' is defined but never used.","'MainColors' is defined but never used.","'UserLogin' is defined but never used.","'setErrorLogin' is assigned a value but never used.","'MyInput' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'newArray' is defined but never used.","'lastModify' is assigned a value but never used.","'fim' is assigned a value but never used.","'magic' is assigned a value but never used.","'setFullLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'userIdAdm', and 'viewAdmActive'. Either include them or remove the dependency array.","ArrayExpression",["429"],"'number' is assigned a value but never used.","'userToken' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'error'.","unsafeRefs","'fileName' is assigned a value but never used.","'ContainerDonwloadButton' is assigned a value but never used.","'Typography' is defined but never used.","'Types' is defined but never used.","'NeutralColors' is defined but never used.","'MyButton' is defined but never used.","'GetToken' is defined but never used.","'AiOutlineFileImage' is defined but never used.","'AiOutlineFilePdf' is defined but never used.","'FaTrashAlt' is defined but never used.","'FaFileDownload' is defined but never used.","'ContainerHeaderUser' is assigned a value but never used.","'ContainerUploadButton' is assigned a value but never used.","'ContentPerfil' is assigned a value but never used.","'useState' is defined but never used.","'SetStateAction' is defined but never used.","'css' is defined but never used.","'Spaces' is defined but never used.","@typescript-eslint/no-redeclare","'MyInput' is already defined.","redeclared","'view' is assigned a value but never used.","'setView' is assigned a value but never used.","no-native-reassign",["430"],"no-negated-in-lhs",["431"],["432"],{"desc":"433","fix":"434"},"no-global-assign","no-unsafe-negation",{"desc":"433","fix":"435"},"Update the dependencies array to be: [dispatch, userIdAdm, viewAdmActive]",{"range":"436","text":"437"},{"range":"438","text":"437"},[3813,3815],"[dispatch, userIdAdm, viewAdmActive]",[3813,3815]]